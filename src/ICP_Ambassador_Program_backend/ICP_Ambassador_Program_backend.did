type Admin = record {
  role : AdminRole;
  spaces : vec text;
  wallet_id : principal;
};
type AdminRole = variant { HubLeader; Editor; SuperAdmin; Moderator };
type CreateSpace = record {
  chain : text;
  name : text;
  slug : text;
  description : text;
  conversion : nat16;
};
type Errors = variant {
  AlreadyEditor;
  ErrorUpdatingAdmin;
  NoSpaceFound;
  ErrUpdatingMissionCount;
  NoSubmissionFound;
  NotRegisteredAsAdmin;
  NotASpaceModerator;
  NotAuthorized;
  NotASuperAdmin;
  NotRegisteredAsModerator;
  AlreadyModerator;
  ReferrerNotFound;
  SubmissionAlreadyReviewed;
  ErrUpdatingSubmission;
  SpaceUpdateError;
  ErrUpdatingMission;
  NotOwnerOrSuperAdmin;
  MissionNotFound;
  MissionInActive;
  AlreadyAdmin;
  AlreadySuperAdmin;
  NotRegisteredAsEditor;
  NoUserFound;
};
type FundEntry = record { balance : nat64; locked : nat64; space_id : text };
type Mission = record {
  img : opt text;
  max_users_rewarded : nat64;
  status : MissionStatus;
  tasks : vec Tasks;
  reward : nat64;
  title : text;
  owner : principal;
  pool : nat64;
  description : text;
  end_date : text;
  start_date : text;
  expiry_date : text;
  reward_currency : RewardCurrency;
  space_id : text;
  mission_id : text;
};
type MissionStatus = variant { UnActive; Active; Draft; Expired };
type ProfileImageData = record { content : opt blob };
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok; Err : Errors };
type Result_10 = variant { Ok : Submission; Err : Errors };
type Result_11 = variant { Ok : RewardHistory; Err : text };
type Result_2 = variant { Ok; Err : text };
type Result_3 = variant { Ok : opt Space; Err : Errors };
type Result_4 = variant { Ok : nat; Err : text };
type Result_5 = variant { Ok : Admin; Err : Errors };
type Result_6 = variant { Ok : vec Mission; Err : Errors };
type Result_7 = variant { Ok : vec record { text; Space }; Err : Errors };
type Result_8 = variant { Ok : Space; Err : Errors };
type Result_9 = variant { Ok : Space; Err : text };
type Reward = record {
  reward : nat64;
  mission_title : text;
  date : text;
  mission_id : text;
};
type RewardCurrency = variant { ICP; CKBTC; CKETH };
type RewardHistory = record { user : text; rewards : vec Reward };
type Role = variant { Editor; Moderator };
type Space = record {
  editors : vec principal;
  owner : principal;
  shor_description : opt text;
  chain : text;
  logo : opt text;
  name : text;
  slug : text;
  urls : SpaceURLs;
  description : text;
  mission_count : nat16;
  bg_css : opt text;
  bg_img : opt text;
  moderators : vec principal;
  conversion : nat16;
  space_id : text;
};
type SpaceURLs = record {
  twitter : opt text;
  website : opt text;
  discord : opt text;
  telegram : opt text;
  github : opt text;
  medium : opt text;
};
type Submission = record {
  status : SubmissionStatus;
  points_rewarded : bool;
  user : text;
  tasks_submitted : vec TaskSubmitted;
  submission_id : text;
  mission_id : text;
};
type SubmissionArr = record { mission : text; submissions : vec text };
type SubmissionStatus = variant { Approved; Rejected; Unread };
type TaskSubmitted = variant {
  SendImage : record { id : nat8; img : text };
  TwitterFollow : record { id : nat8; followed : bool };
  SendUrl : record { id : nat8; url : text };
  SendText : record { id : nat8; "text" : text };
  SendTwitterPost : record { id : nat8; post : text };
};
type Tasks = variant {
  SendImage : record { id : nat8; img : text; title : text; body : text };
  TwitterFollow : record {
    id : nat8;
    title : text;
    body : text;
    account : text;
  };
  SendUrl : record { id : nat8; title : text; body : text };
  SendText : record {
    id : nat8;
    title : text;
    validation_rule : text;
    sample : text;
    body : text;
    max_len : nat16;
  };
  SendTwitterPost : record { id : nat8; title : text; body : text };
};
type UserLevel = variant { GrandMaster; Initiate; Knight; Padawan; Master };
type UserProfile = record {
  hub : text;
  username : text;
  redeem_points : nat64;
  xp_points : nat64;
  referred_by : opt text;
  direct_refers : vec text;
  level : UserLevel;
  discord_id : text;
  wallet : opt principal;
};
service : {
  add_funds : (text, nat64) -> (Result);
  add_or_update_submission : (Submission) -> (Result_1);
  add_role_to_space : (text, principal, Role) -> (Result_2);
  add_task_submission : (Submission, TaskSubmitted) -> (Result);
  add_wallet : (text) -> (Result);
  approve_submission : (text) -> (Result);
  create_draft_mission : (text) -> (Result_1);
  create_space : (CreateSpace) -> (Result_3);
  create_user : (text, text, text, opt text) -> (Result);
  deposit_icp_to_canister : (nat64) -> (Result_4);
  edit_mission : (Mission) -> (Result_2);
  get_admin : () -> (Result_5) query;
  get_all_mission_submissions : (text) -> (opt SubmissionArr) query;
  get_all_space_missions : (text) -> (Result_6) query;
  get_all_space_missions_open : (text) -> (Result_6) query;
  get_all_spaces : () -> (Result_7) query;
  get_fund_details : (text) -> (opt FundEntry) query;
  get_space : (text) -> (Result_8) query;
  get_space_by_id : (text) -> (Result_9) query;
  get_submission : (text) -> (Result_10) query;
  get_user_data : (text) -> (opt UserProfile) query;
  get_user_reward_history : (text) -> (Result_11) query;
  register_admin : () -> (Result_1);
  reject_submission : (text) -> (Result);
  update_space : (Space) -> (Result_1);
  upload_profile_image : (text, ProfileImageData) -> (Result);
  withdraw_points : (text, nat64) -> (Result);
}
